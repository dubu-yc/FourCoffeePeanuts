jesseX -- 2021-10-28 22:06
In design.pdf:
- Made the program components section more specific
- Cleared up how we would implement a stories list in the users table
- Delegated tasks amongst our group
- Added flask and html file specification section

elizaK -- 2021-10-30 15:38
In __init__.py
- configured the basic stuff so the mainpage opens
- created routes for login, create_account that
take you to forms to do those things
- created routes for handling submission of login
or create_account and wrote pseudocode for the steps
necessary to have those working
In templates
- created templates folder
- made main_page.html which just renders the root
route and has links that take you to login/create
- made login_create.html which conditionally
renders the different forms to log in or make
account because this way there are fewer files
Next steps :)
1. Create the 2 databases in design doc
2. Configure the submit functions that now have
pseudocode
3. Configure sessions

jesseX -- 2021-10-30 22:40
In __init__.py
- Created db file that contains user and stories table
- Added to user table with username and password entered in login_create form
- Checks whether or not username is already taken, and outputs error if it is
- Checks whether or not the passwords match in user creation, and outputs error if they do not
- Changed input type to password for password parameters
- Commented out submit_login so the python file can run currently
Next steps
1. Configure submit_login function
2. Configure sessions
3. Begin story creation

yayingLL -- 2021-11-1 01:03
In __init__.py
- Added submit_login() method
- Compares if username and password inputted matches with the information in the users database; if it does, takes user to logged-in page; if it doesn't, displays respective error message
- Added error() method, which takes in which_error as a parameter; which_error tells which error to display in the HTML file
Next steps
1. Configure sessions
2. Begin story creation
3. Fix up HTML templates

yayingLL and jesseX -- 2021-11-1 09:20
In __init__.py
- Removed error method in favor of adding errors messages through variable in html file
- Saves session when logging in
- Added dashboard page with logout button
In templates
- Added html file for dashboard (logged_in.html)
Next steps
1. Continue to configure sessions
2. Add story creation page and button in dashboard
3. Fix up HTML templates

jesseX -- 2021-11-1 18:47
In __init__.py
- Added username global variable to save username if there is a user logged in
- Pops out session when logout button is pressed
- Redirects to dashboard on main page if user is logged in
- Error generated if username or password is blank
Next steps
1. Add story creation page and button in dashboard
2. Fix up HTML templates
3. Add story search functionality/ see stories from dashboard

elizaK -- 2021-11-2 11:53
In __init__.py
- added try except blocks so that the login functions never crash
- added functions in python to handle and redirect those submissions
- problem: the new submission isn't post so the function doesn't 
get the title and story from the form for some reason
In templates (create_story.html, dashboard.html)
- made logout dashboard instead and have the submit login and create
account functions redirect to the dashboard
- added button to dashboard to create story that takes user to create_story.html
where they can submit a story
Next steps
1. Figure out the form submission after you submit create story 
2. Add the information to the database when you submit
3. Add story search functionality/ see stories from dashboard (later)

ryanW -- 2021-11-02 22:50
Bug about method=POST
    In __init__.py 
    - submit_create_story() had a bug where method was not POST, 
      so the conditional couldn't run
    In create_story.html
    - solved this bug by specifying the method as POST in the form 
Adding Story Entries into stories table
    In __init__.py
    - added the functionality to insert into stories table in submit_create_story()
      which is utilized in create_story.html
    In create_story.html
    - the button can insert into stories table. 
    In dashboard.html
    - After logging in, the user can see all the stories in a table.
Next steps
1. For now, the user cannot update the stories they see in the table in dashboard.html.
   We need to add a button/link to each story that can do that. 
2. The user is only supposed to be able to see the title and latest update. The table 
   in dashboard right now shows full story. 